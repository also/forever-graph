void setup() {
  size(1024, 768);
  drawAll();
}

void animate() {
  background(#242934);
  animating = setInterval(advance, 50);
  pos = 1;
}

var pos;
var animating = false;

void toggleAnimation() {
  if (animating) {
    stopAnimation();
  }
  else {
    animate();
  }
}

void stopAnimation() {
  clearInterval(animating);
  animating = false;
  drawAll();
}

void advance() {
  if (pos == data.coords.length) {
    stopAnimation();
    return;
  }
  start = data.coords[pos - 1];
  end = data.coords[pos];
  stroke(#00b0f8);
  line(start.x * width, start.y * height, end.x * width, end.y * height);
  pos++;
}

void drawAll() {
  background(#242934);
  drawEdges();
  drawPoints();
}

void drawPoints() {
  for (int i = 0; i < data.coords.length; i++) {
    point = data.coords[i];
    noStroke();
    ellipse(point.x * width, point.y * height, 2, 2);
  }
}

void drawEdges() {
  stroke(#363e4e);
  for (int i = 0; i < data.edges.length; i++) {
    edge = data.edges[i];
    if (edge.isNext) {
      continue;
    }
    drawEdge(edge);
  }
  stroke(#00b0f8);
  for (int i = 0; i < data.edges.length; i++) {
    edge = data.edges[i];
    if (!edge.isNext) {
      continue;
    }
    drawEdge(edge);
  }
}

void drawEdge(edge) {
  start = data.coords[edge[0]];
  end = data.coords[edge[1]];
  line(start.x * width, start.y * height, end.x * width, end.y * height);
}

hoveredPoint = null;
zoom = false;

void mouseMoved() {
  if (animating) {
    return;
  }
  if (zoom) {
    background(#242934);
    pushMatrix();
    scale(3);
    translate(-mouseX + width / 6, -mouseY + height / 6);
    drawAll();
    popMatrix();
  }
  else {
    for (int i = 0; i < data.coords.length; i++) {
      coord = data.coords[i];
      if (dist(mouseX, mouseY, coord.x * width, coord.y * height) < 10) {
        if (coord != hoveredPoint) {
          hoveredPoint = coord;
          hoverPoint();
        }
        return;
      }
    }
    if (hoveredPoint) {
      unhoverPoint();
      hoveredPoint = null;
    }
  }
}

void mouseClicked() {
  if (animating) {
    return;
  }
  zoom = !zoom;
  drawAll();
}

void hoverPoint(keep) {
  if (!keep) drawAll();
  noStroke();
  ellipse(hoveredPoint.x * width, hoveredPoint.y * height, 15, 15);
}

void unhoverPoint() {
  drawAll();
}